import prisma from "../../../core/db/prismaInstance.js";

export const addAssignmentFile = async (req, res) => {
    const { section_id, title, start_date, end_date } = req.body;

    try {
        // Validate required fields
        if (!section_id || !title) {
            return res.status(400).json({ message: "Section ID and title are required." });
        }

        // Extract the uploaded file
        const file = req.file; // Assuming you're using a middleware like multer for file uploads
        if (!file) {
            return res.status(400).json({ message: "File is required." });
        }

        // Prepare file data
        const fileData = {
            objName: file.objName, // Path or identifier of the file in MinIO
            originalName: file.originalname, // Original name of the uploaded file
        };
        console.log("Uploaded file:", fileData);

        // Create a new record in the database
        const newFileRecord = await prisma.assignment.create({
            data: {
                section_id: parseInt(section_id),
                title,
                description: fileData.objName, // Save the file path in the description column
                start_date: start_date ? new Date(start_date) : null,
                end_date: end_date ? new Date(end_date) : null,
            },
        });

        console.log("New File Record Created:", newFileRecord);

        return res.status(200).json({
            message: "File uploaded successfully!",
            file: fileData,
            fileRecord: newFileRecord,
        });
    } catch (error) {
        console.log("Error uploading file:", error);
        return res.status(500).json({ message: "Server error", error: error.message });
    }
};
